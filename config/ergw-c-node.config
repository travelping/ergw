%-*-Erlang-*-
[{ergw, [
	 {'$setup_vars',
	  [{"ORIGIN", {value, "epc.mnc001.mcc001.3gppnetwork.org"}}]},

	 {plmn_id, {<<"001">>, <<"01">>}},

	 {sockets,
	  [{cp, [{type, 'gtp-u'},
			  {vrf, cp},
			  {ip,  {127,0,0,1}},
			  freebind,
			  {reuseaddr, true}
			 ]},
	   {irx, [{type, 'gtp-c'},
		  {ip,  {127,0,0,1}},
		  {netdev, "grx"},
		  freebind
		 ]},
	   {sx, [{node, 'ergw'},
		     {name, 'ergw'},
		     {type, 'pfcp'},
		     {socket, cp},
		     {ip,  {172,21,16,2}}
		 ]},
	  ]},

	 {vrfs,
	  [{sgi, [{pools,  [{{10, 180, 0, 1}, {10, 180, 255, 254}, 32},
			    {{16#8001, 0, 0, 0, 0, 0, 0, 0},
			     {16#8001, 0, 0, 16#FFFF, 0, 0, 0, 0}, 64}
			   ]},
		  {'MS-Primary-DNS-Server', {8,8,8,8}},
		  {'MS-Secondary-DNS-Server', {8,8,4,4}},
		  {'MS-Primary-NBNS-Server', {127,0,0,1}},
		  {'MS-Secondary-NBNS-Server', {127,0,0,1}}
		 ]}
	  ]},

	 {handlers,
	  [{'h1', [{handler, pgw_s5s8},
		   {protocol, gn},
		   {sockets, [irx]},
		   {node_selection, [default]},
		   {aaa, [{'Username',
			   [{default, ['IMSI', <<"@">>, 'APN']}]}]}
		  ]},
	   {'h2', [{handler, pgw_s5s8},
		   {protocol, s5s8},
		   {sockets, [irx]},
		   {node_selection, [default]}
		  ]}
	  ]},

	 {apns,
	  [{[<<"apn01">>,<<"example">>,<<"net">>], [{vrf, sgi}]},
	   {[<<"apn02">>,<<"example">>,<<"net">>], [{vrf, sgi}]}
	  ]},

	 %% {teid, {3, 6}}, % {teid, {Prefix, Length}}

	 {node_selection,
	  [{default,
	    {static,
	     [
	      %% APN NAPTR alternative
	      {"_default.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-upf","x-sxb"}],
	       "topon.sx.prox01.$ORIGIN"},

	      {"apn01.example.net.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-upf","x-sxb"}],
	       "topon.sx.prox01.$ORIGIN"},

	      %% A/AAAA record alternatives
	      {"topon.sx.prox01.$ORIGIN", [{127,0,0,1}], []}
	     ]
	    }
	   }
	  ]
	 },

	 {nodes,
	  [{default,
	    [{vrfs,
	      [{cp, [{features, ['CP-Function']}]},
	       {epc, [{features, ['Access']}]},
	       {sgi, [{features, ['SGi-LAN']}]}]
	     }]
	   }]
	 },

	 {path_management,
	  [{active, false},
	   {t3, 10 * 1000},
	   {n3,  5},
	   {echo, 60 * 1000},
	   {idle_timeout, 1800 * 1000},
	   {idle_echo,     600 * 1000},
	   {down_timeout, 3600 * 1000},
	   {down_echo,     600 * 1000}]},

	 {http_api, [{port, 8000}, {ip, {127, 0, 0, 1}}]}
	]},

 {ergw_aaa,
  [{handlers,
    [{ergw_aaa_static,
	[{'NAS-Identifier',        <<"NAS-Identifier">>},
	 {'Acct-Interim-Interval', 600},
	 {'Framed-Protocol',       'PPP'},
	 {'Service-Type',          'Framed-User'}]}
    ]},

   {services,
    [{'Default', [{handler, 'ergw_aaa_static'}]}
    ]},

   {apps,
    [{default,
      [{session, ['Default']},
       {procedures, [{authenticate, []},
		     {authorize, []},
		     {start, []},
		     {interim, []},
		     {stop, []}]}
      ]}
    ]}
  ]},

 {jobs, [{queues,
	  [{path_restart,
	    [{path_restart, [{standard_counter, 100}]},
	     {create, [{standard_rate, 100}, {max_size, 10}]},
	     {delete, [{standard_counter, 100}]},
	     {other, [{standard_rate, 100}, {max_size, 10}]}
	    ]}
	  ]}
	]},

 {setup, [{data_dir, "/var/lib/ergw"},
	  {log_dir,  "/var/log/ergw-c-node"}
	 ]},

 {kernel,
  [{logger,
    [{handler, default, logger_std_h,
      #{level => info,
	config =>
	    #{sync_mode_qlen => 10000,
	      drop_mode_qlen => 10000,
	      flush_qlen     => 10000}
       }
     }
    ]}
  ]}
].
