stages:
  - build
  - test
  - container

before_script:
  - apk update
  - apk --no-cache upgrade
  - apk --no-cache add gcc git libc-dev libc-utils libgcc linux-headers make bash musl-dev musl-utils ncurses-dev pcre2 pkgconf scanelf wget zlib

.build:otp: &build_otp
  stage: build
  image: erlang
  artifacts:
    untracked: true
    paths:
      - _build
  script:
    # Prepare environmental variables
    - wget https://s3.amazonaws.com/rebar3/rebar3 && chmod a+x rebar3
    - ./rebar3 compile

build:otp-22.1:
  <<: *build_otp
  image: erlang:22.1.8-alpine

build:otp-22.2:
  <<: *build_otp
  image: erlang:22.2.8-alpine

build:otp-22.3:
  <<: *build_otp
  image: erlang:22.3.1-alpine

build:otp-23.0:
  <<: *build_otp
  allow_failure: true
  image: erlang:23.0-rc3-alpine

.check:otp: &check_otp
  stage: test
  image: erlang
  artifacts:
    when: always
    untracked: true
    paths:
      - _build
    reports:
      junit: _build/test/logs/report.xml
  script:
    - sh -c 'echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6'
    - ip addr add fd96:dcd2:efdb:41c3::10/64 dev lo
    - ip addr add fd96:dcd2:efdb:41c3::20/64 dev lo
    - ip addr add fd96:dcd2:efdb:41c3::30/64 dev lo
    - ip addr add fd96:dcd2:efdb:41c3::40/64 dev lo
    - ip addr add fd96:dcd2:efdb:41c3::50/64 dev lo
    - ./rebar3 do xref
    - ./rebar3 do ct

check:otp-22.1:
  <<: *check_otp
  image: erlang:22.1.8-alpine
  dependencies:
    - build:otp-22.1

check:otp-22.2:
  <<: *check_otp
  image: erlang:22.2.8-alpine
  dependencies:
    - build:otp-22.2

check:otp-22.3:
  <<: *check_otp
  image: erlang:22.3.1-alpine
  dependencies:
    - build:otp-22.3

check:otp-23.0:
  <<: *check_otp
  image: erlang:23.0-rc3-alpine
  allow_failure: true
  dependencies:
    - build:otp-23.0

docker:
  image: docker:git
  stage: container
  dependencies: []
  variables:
    REGISTRY: "quay.io"
    BUILD_IMAGE: "travelping/ergw-c-node"
  services:
    - docker:dind
  script:
    - export CI_COMMIT_DESCRIBE=$(git describe)
    - |
      case "$CI_COMMIT_REF_NAME" in
        master | stable/*) export LABELS="";;
        *)                 export LABELS="--label quay.expires-after=7d";;
      esac
    - docker login -u ${QUAY_USER_ID} -p ${QUAY_TOKEN} ${REGISTRY}
    - docker build ${LABELS} -t ${REGISTRY}/${BUILD_IMAGE}:$CI_COMMIT_SHA -t ${REGISTRY}/${BUILD_IMAGE}:$CI_COMMIT_REF_SLUG\_$CI_COMMIT_DESCRIBE -f docker/Dockerfile .
    - docker push ${REGISTRY}/${BUILD_IMAGE}:$CI_COMMIT_SHA
    - docker push ${REGISTRY}/${BUILD_IMAGE}:$CI_COMMIT_REF_SLUG\_$CI_COMMIT_DESCRIBE
    - if [ $CI_COMMIT_REF_NAME == "master" ] ; then docker tag ${REGISTRY}/${BUILD_IMAGE}:$CI_COMMIT_SHA ${REGISTRY}/${BUILD_IMAGE}:latest ; docker push ${REGISTRY}/${BUILD_IMAGE}:latest ; fi
  when: always
